// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0-dev.15.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import 'frb_generated.dart';
import 'libs/expression.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

CalcReturnForDart draw(
        {required String func,
        required VariableBuilder variableBuilder,
        required List<Constant> constantProvider,
        required bool changeContext,
        dynamic hint}) =>
    RustLib.instance.api.draw(
        func: func,
        variableBuilder: variableBuilder,
        constantProvider: constantProvider,
        changeContext: changeContext,
        hint: hint);

List<ExpressionList> getFunctions({dynamic hint}) =>
    RustLib.instance.api.getFunctions(hint: hint);

class Expression {
  final String name;
  final String latex;
  final String description;
  final String avatar;

  const Expression({
    required this.name,
    required this.latex,
    required this.description,
    required this.avatar,
  });

  @override
  int get hashCode =>
      name.hashCode ^ latex.hashCode ^ description.hashCode ^ avatar.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is Expression &&
          runtimeType == other.runtimeType &&
          name == other.name &&
          latex == other.latex &&
          description == other.description &&
          avatar == other.avatar;
}

class ExpressionList {
  final String name;
  final String latex;
  final String description;
  final String avatar;
  final List<Expression> list;

  const ExpressionList({
    required this.name,
    required this.latex,
    required this.description,
    required this.avatar,
    required this.list,
  });

  @override
  int get hashCode =>
      name.hashCode ^
      latex.hashCode ^
      description.hashCode ^
      avatar.hashCode ^
      list.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is ExpressionList &&
          runtimeType == other.runtimeType &&
          name == other.name &&
          latex == other.latex &&
          description == other.description &&
          avatar == other.avatar &&
          list == other.list;
}
