// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0-dev.15.

// ignore_for_file: unused_import, unused_element, unnecessary_import, duplicate_ignore, invalid_use_of_internal_member, annotate_overrides, non_constant_identifier_names, curly_braces_in_flow_control_structures, prefer_const_literals_to_create_immutables

import 'api.dart';
import 'dart:async';
import 'dart:convert';
import 'frb_generated.dart';
import 'libs/expression.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated_web.dart';

abstract class RustLibApiImplPlatform extends BaseApiImpl<RustLibWire> {
  RustLibApiImplPlatform({
    required super.handler,
    required super.wire,
    required super.generalizedFrbRustBinding,
    required super.portManager,
  });

  @protected
  String dco_decode_String(dynamic raw);

  @protected
  bool dco_decode_bool(dynamic raw);

  @protected
  VariableBuilder dco_decode_box_autoadd_variable_builder(dynamic raw);

  @protected
  CalcReturnForDart dco_decode_calc_return_for_dart(dynamic raw);

  @protected
  Constant dco_decode_constant(dynamic raw);

  @protected
  Expression dco_decode_expression(dynamic raw);

  @protected
  ExpressionList dco_decode_expression_list(dynamic raw);

  @protected
  double dco_decode_f_64(dynamic raw);

  @protected
  List<Constant> dco_decode_list_constant(dynamic raw);

  @protected
  List<Expression> dco_decode_list_expression(dynamic raw);

  @protected
  List<ExpressionList> dco_decode_list_expression_list(dynamic raw);

  @protected
  Float64List dco_decode_list_prim_f_64_strict(dynamic raw);

  @protected
  Uint8List dco_decode_list_prim_u_8_strict(dynamic raw);

  @protected
  int dco_decode_u_8(dynamic raw);

  @protected
  void dco_decode_unit(dynamic raw);

  @protected
  VariableBuilder dco_decode_variable_builder(dynamic raw);

  @protected
  String sse_decode_String(SseDeserializer deserializer);

  @protected
  bool sse_decode_bool(SseDeserializer deserializer);

  @protected
  VariableBuilder sse_decode_box_autoadd_variable_builder(
      SseDeserializer deserializer);

  @protected
  CalcReturnForDart sse_decode_calc_return_for_dart(
      SseDeserializer deserializer);

  @protected
  Constant sse_decode_constant(SseDeserializer deserializer);

  @protected
  Expression sse_decode_expression(SseDeserializer deserializer);

  @protected
  ExpressionList sse_decode_expression_list(SseDeserializer deserializer);

  @protected
  double sse_decode_f_64(SseDeserializer deserializer);

  @protected
  List<Constant> sse_decode_list_constant(SseDeserializer deserializer);

  @protected
  List<Expression> sse_decode_list_expression(SseDeserializer deserializer);

  @protected
  List<ExpressionList> sse_decode_list_expression_list(
      SseDeserializer deserializer);

  @protected
  Float64List sse_decode_list_prim_f_64_strict(SseDeserializer deserializer);

  @protected
  Uint8List sse_decode_list_prim_u_8_strict(SseDeserializer deserializer);

  @protected
  int sse_decode_u_8(SseDeserializer deserializer);

  @protected
  void sse_decode_unit(SseDeserializer deserializer);

  @protected
  VariableBuilder sse_decode_variable_builder(SseDeserializer deserializer);

  @protected
  int sse_decode_i_32(SseDeserializer deserializer);

  @protected
  String cst_encode_String(String raw) {
    return raw;
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_variable_builder(VariableBuilder raw) {
    return cst_encode_variable_builder(raw);
  }

  @protected
  List<dynamic> cst_encode_calc_return_for_dart(CalcReturnForDart raw) {
    return [
      cst_encode_list_prim_f_64_strict(raw.result),
      cst_encode_list_constant(raw.constants)
    ];
  }

  @protected
  List<dynamic> cst_encode_constant(Constant raw) {
    return [
      cst_encode_String(raw.identity),
      cst_encode_f_64(raw.value),
      cst_encode_f_64(raw.max),
      cst_encode_f_64(raw.min),
      cst_encode_f_64(raw.step)
    ];
  }

  @protected
  List<dynamic> cst_encode_expression(Expression raw) {
    return [
      cst_encode_String(raw.name),
      cst_encode_String(raw.latex),
      cst_encode_String(raw.description),
      cst_encode_String(raw.avatar)
    ];
  }

  @protected
  List<dynamic> cst_encode_expression_list(ExpressionList raw) {
    return [
      cst_encode_String(raw.name),
      cst_encode_String(raw.latex),
      cst_encode_String(raw.description),
      cst_encode_String(raw.avatar),
      cst_encode_list_expression(raw.list)
    ];
  }

  @protected
  List<dynamic> cst_encode_list_constant(List<Constant> raw) {
    return raw.map(cst_encode_constant).toList();
  }

  @protected
  List<dynamic> cst_encode_list_expression(List<Expression> raw) {
    return raw.map(cst_encode_expression).toList();
  }

  @protected
  List<dynamic> cst_encode_list_expression_list(List<ExpressionList> raw) {
    return raw.map(cst_encode_expression_list).toList();
  }

  @protected
  Float64List cst_encode_list_prim_f_64_strict(Float64List raw) {
    return raw;
  }

  @protected
  Uint8List cst_encode_list_prim_u_8_strict(Uint8List raw) {
    return raw;
  }

  @protected
  List<dynamic> cst_encode_variable_builder(VariableBuilder raw) {
    return [
      cst_encode_String(raw.identity),
      cst_encode_bool(raw.uninitialized),
      cst_encode_f_64(raw.min),
      cst_encode_f_64(raw.max),
      cst_encode_f_64(raw.step),
      cst_encode_f_64(raw.value)
    ];
  }

  @protected
  bool cst_encode_bool(bool raw);

  @protected
  double cst_encode_f_64(double raw);

  @protected
  int cst_encode_u_8(int raw);

  @protected
  void cst_encode_unit(void raw);

  @protected
  void sse_encode_String(String self, SseSerializer serializer);

  @protected
  void sse_encode_bool(bool self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_variable_builder(
      VariableBuilder self, SseSerializer serializer);

  @protected
  void sse_encode_calc_return_for_dart(
      CalcReturnForDart self, SseSerializer serializer);

  @protected
  void sse_encode_constant(Constant self, SseSerializer serializer);

  @protected
  void sse_encode_expression(Expression self, SseSerializer serializer);

  @protected
  void sse_encode_expression_list(
      ExpressionList self, SseSerializer serializer);

  @protected
  void sse_encode_f_64(double self, SseSerializer serializer);

  @protected
  void sse_encode_list_constant(List<Constant> self, SseSerializer serializer);

  @protected
  void sse_encode_list_expression(
      List<Expression> self, SseSerializer serializer);

  @protected
  void sse_encode_list_expression_list(
      List<ExpressionList> self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_f_64_strict(
      Float64List self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_u_8_strict(
      Uint8List self, SseSerializer serializer);

  @protected
  void sse_encode_u_8(int self, SseSerializer serializer);

  @protected
  void sse_encode_unit(void self, SseSerializer serializer);

  @protected
  void sse_encode_variable_builder(
      VariableBuilder self, SseSerializer serializer);

  @protected
  void sse_encode_i_32(int self, SseSerializer serializer);
}

// Section: wire_class

class RustLibWire extends BaseWire {
  RustLibWire.fromExternalLibrary(ExternalLibrary lib);

  void dart_fn_deliver_output(int call_id, PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_, int data_len_) =>
      wasmModule.dart_fn_deliver_output(
          call_id, ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_draw(String func, List<dynamic> variable_builder,
              List<dynamic> constant_provider, bool change_context) =>
          wasmModule.wire_draw(
              func, variable_builder, constant_provider, change_context);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_get_functions() => wasmModule.wire_get_functions();
}

@JS('wasm_bindgen')
external RustLibWasmModule get wasmModule;

@JS()
@anonymous
class RustLibWasmModule implements WasmModule {
  @override
  external Object /* Promise */ call([String? moduleName]);

  @override
  external RustLibWasmModule bind(dynamic thisArg, String moduleName);

  external void dart_fn_deliver_output(int call_id,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_draw(String func, List<dynamic> variable_builder,
          List<dynamic> constant_provider, bool change_context);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_get_functions();
}
